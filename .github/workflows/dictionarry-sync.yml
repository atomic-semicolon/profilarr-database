name: Sync with Dictionarry
on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
jobs:
  sync:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v5
        with:
          ref: main
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          
      - name: Add upstream Dictionarry connection
        run: |
          git remote add upstream https://github.com/Dictionarry-Hub/database.git
          git fetch upstream stable
          
      - name: Create (or update) sync branch
        run: |
          git checkout main
          BRANCH="sync-latest"
          echo "branch=$BRANCH" >> $GITHUB_ENV
          git branch -D "$BRANCH" 2>/dev/null || true
          git checkout -b "$BRANCH"

      - name: Attempt merge with upstream updates
        run: |
          set +e
          if git merge --no-commit --no-ff upstream/stable; then
            echo "merge_success=true" >> $GITHUB_OUTPUT
          else
            echo "merge_success=false" >> $GITHUB_OUTPUT
          fi
          set -e

      - name: Apply exclusions
        run: |
          git rm -r --cached --ignore-unmatch .github/
          git rm -r --cached --ignore-unmatch .gitignore
          git rm -r --cached --ignore-unmatch CONTRIBUTING.md
          git rm -r --cached --ignore-unmatch README.md
          if ! git diff --cached --quiet; then
            git commit -m "Remove excluded files after sync"
          fi

      - name: Push sync branch
        run: |
          git push origin "$branch" --force

      - name: Create (or update) pull request
        run: |
          if gh pr view "$branch" &>/dev/null; then
            echo "Updating existing PR..."
            gh pr edit "$branch" \
              --title "Upstream Sync ($(date +%Y-%m-%d))" \
              --body "Automated upstream sync branch updated."
          else
            echo "Creating new PR..."
            gh pr create \
              --title "Upstream Sync ($(date +%Y-%m-%d))" \
              --body "Automated upstream sync branch created." \
              --base main \
              --head "$branch"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add label to PR
        run: |
          PR_NUMBER=$(gh pr view "$branch" --json number -q .number)
          gh pr edit "$PR_NUMBER" --add-label "sync"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge PR if successful
        if: steps.merge.outputs.merge_success == 'true'
        run: |
          gh pr merge "$branch" --merge --auto
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
